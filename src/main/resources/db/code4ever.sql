DELETE
FROM user;
INSERT INTO user (ID, USERNAME)
VALUES (1, 'Codecadet'),
       (2, 'Andre'),
       (3, 'Paulo');

DELETE
FROM question;
INSERT INTO question (ID, DESCRIPTION, DIFFICULTY)
VALUES (1, 'What is an Exception?', 'medium'),
       (2, 'What is Inheritance?', 'medium'),
       (3, 'What is Encapsulation?', 'medium'),
       (4, 'What is the difference between "=" and "==" in Java?', 'easy'),
       (5, 'Java is an interpreted or compiled language?', 'easy'),
       (6, 'What is Abstraction?', 'medium'),
       (7, 'Java is an interpreted or compiled language?', 'easy'),
       (8, 'Which are the pillars of OOP?', 'easy'),
       (9, 'What is Polymorphism?', 'medium'),
       (10, 'When you write the keyword new in your code what happens?', 'easy'),
       (11,
        'If we have methods with the same signature in the superclass and subclass in the subclass, the we say the subclass method is ... the superclass.',
        'easy'),
       (12, 'What does the keyword "Final" mean?', 'medium'),
       (13, 'I can access any method or property of the class without instantiating it', 'easy'),
       (14, 'What is a Class?', 'easy'),
       (15, 'What does the keyword "this" mean?', 'medium'),
       (16, 'What is a constructor?', 'medium'),
       (17, 'Which option is valid?', 'hard'),
       (18, 'What is the Java virtual machine?', 'easy'),
       (19, 'What was the most played game by our team during the bootcamp?', 'hard'),
       (20, 'What is a design pattern?', 'easy'),
       (21,
        '____ is a design pattern designed to provide a flexible solution to various object creation problems in object oriented programming.',
        'harder'),
       (22, 'What is the spring framework?', 'hard'),
       (23, 'What is the hibernate?', 'hard'),
       (24, 'What is SQL?', 'hard');

DELETE
FROM answer;
INSERT INTO answer (ID, DESCRIPTION, VALIDATION, QUESTION_ID)
VALUES (1, 'Event that can happen during the execution of a program and disrupts it´s normal flow', 'true', 1),
       (2, 'Event that always happen during the execution of a program and disrupts it´s normal flow', 'false', 1),
       (3, 'Event that can happen during the execution of a program but doesn’t disrupts it´s normal flow', 'false', 1),
       (4, 'Event that happen when the program stop his execution', 'false', 1),
       (5,
        'Mechanism by which one object acquires all the properties and behavior of another object of another class',
        'true',
        2),
       (6, 'Mechanism by which one object just acquires the properties of another object of another class', 'false', 2),
       (7,
        'Mechanism by which one object just acquires all the behavior of another object of another class',
        'false',
        2),
       (8, 'When you inherit money from someone who died', 'false', 2),
       (9, 'The process of wrapping data in to a single unit class and keeps data safe from misuse', 'true', 3),
       (10, 'The process of hiding the behaviour of the API from other classes', 'false', 3),
       (11, 'The process of wrapping data in brackets', 'false', 3),
       (12, 'The process of putting a class in a capsule', 'false', 3),
       (13, '= attributes value and == compares values', 'true', 4),
       (14, '== attributes value and = compares values', 'false', 4),
       (15, 'both defines value', 'false', 4),
       (16, 'both compares value', 'false', 4),
       (17, 'Both', 'true', 5),
       (18, 'Interpreted', 'false', 5),
       (19, 'Compiled', 'false', 5),
       (20, 'None', 'false', 5),
       (21,
        'Abstraction is selecting data from a larger pool to show only the relevant details to the object.',
        'true',
        6),
       (22, 'Abstraction is a relation of HAS-A between classes. ', 'false', 6),
       (23, 'Abstraction is a relation of IS-A between classes.', 'false', 6),
       (24, 'Abstraction is a relation of NAS-A between classes.', 'false', 6),
       (25, 'Both', 'true', 7),
       (26, 'Interpreted', 'false', 7),
       (27, 'Compiled', 'false', 7),
       (28, 'None', 'false', 7),
       (29, 'Encapsulation, Abstraction, Inheritance and Polymorphism', 'true', 8),
       (30, 'Encapsulation, Composition, Inheritance and Polymorphism', 'false', 8),
       (31, 'Composition, Abstraction, Inheritance and Polymorphism', 'false', 8),
       (32, 'Instantiation, Abstraction, Inheritance and Polymorphism', 'false', 8),
       (33, 'Is the ability of an object to take on many forms and can change behaviour in runtime', 'true', 9),
       (34, 'Is the ability of an object to take on many forms but can’t change behaviour in runtime.', 'false', 9),
       (35, 'Is when a human transform into animals', 'false', 9),
       (36, 'Is the ability of an object to take one form', 'false', 9),
       (37, 'A new Object is instantiated', 'true', 10),
       (38, 'A new Object is initialized', 'false', 10),
       (39, 'A new Class is initialized', 'false', 10),
       (40, 'A new word is written', 'false', 10),
       (41, 'Overriding', 'true', 11),
       (42, 'Copying', 'false', 11),
       (43, 'Implementing', 'false', 11),
       (44, 'Extending', 'false', 11),
       (45,
        'We can use the Final keyword in classes, properties and methods. If in the class, it can’t be extended, in the method, can’t be overwritten, in the property, it’s value is immutable',
        'true',
        12),
       (46, 'Its the final method of the class', 'false', 12),
       (47, 'Final means that classes, properties and methods won’t change it’s value', 'false', 12),
       (48, 'It’s when we finish a project', 'false', 12),
       (49, 'Static', 'true', 13),
       (50, 'Final', 'false', 13),
       (51, 'Extended', 'false', 13),
       (52, 'Embedded', 'false', 13),
       (53, 'It’s a blueprint of an object', 'true', 14),
       (54, 'It’s an object', 'false', 14),
       (55, 'It’s an abstract Object', 'false', 14),
       (56, 'It’s a property', 'false', 14),
       (57, 'It’s a reference to the current Object', 'true', 15),
       (58, 'It’s a reference to that method', 'false', 15),
       (59, 'It’s a property of that object', 'false', 15),
       (60, 'It’s a reference to an object of the parent class', 'false', 15),
       (61, 'It’s a special method who initializes objects;', 'true', 16),
       (62, 'It’s a special class who instantiated objects', 'false', 16),
       (63, 'It’s a special method called Bob', 'false', 16),
       (64, 'It’s a special class who calls the constructor interface', 'false', 16),
       (65,
        'Auto-boxing is the automatic conversion that Java compiler makes between the primitive types and their corresponding object wrapper classes',
        'true',
        17),
       (66,
        'Converting an object of a wrapper type to its corresponding primitive value is called unboxing',
        'false',
        17),
       (67, 'All of the above', 'false', 17),
       (68, 'None of the above', 'false', 17),
       (69, 'Is a virtual machine that enables the computer to run the Java program', 'true', 18),
       (70, 'Is a physic machine that enables the computer to run the Java program.', 'false', 18),
       (71, 'Is a virtual machine that enables the computer to run the JavaScript program.', 'false', 18),
       (72, 'Is a physic machine that enables the computer to run the JavaScript program', 'false', 18),
       (73, 'Tekken 5', 'true', 19),
       (74, 'Ping Pong', 'false', 19),
       (75, 'Fishing', 'false', 19),
       (76, 'Sueca', 'false', 19),
       (77,
        'Is a solution to general problems that software developers faced during software development.',
        'true',
        20),
       (78, 'is method that gives style to the program', 'false', 20),
       (79, 'it’s a solution to a new problem that you just created', 'false', 20),
       (80, 'None of the above', 'false', 20),
       (81, 'Builder', 'true', 21),
       (82, 'Observer', 'false', 21),
       (83, 'Factory', 'false', 21),
       (84, 'Singleton', 'false', 21),
       (85,
        'Is a framework for dependency-injection which is a pattern that allows to build very decoupled systems',
        'true',
        22),
       (86,
        'Is a framework for dependency-injection which is a pattern that allows to build very coupled systems',
        'false',
        22),
       (87, 'None of the above', 'false', 22),
       (88, 'Both', 'false', 22),
       (89,
        'Is an lightweight ORM tool that is used to store, manipulate, and retrieve data from the database.',
        'true',
        23),
       (90, 'Is an lightweight ORM tool that is used just to store data from the database', 'false', 23),
       (91, 'Is an lightweight ORM tool that is used just to manipulate data from the database', 'false', 23),
       (92, 'Is an lightweight ORM tool that is used just to retrieve data from the database', 'false', 23),
       (93, 'SQL is a standard query language used for maintaining the relational database', 'true', 24),
       (94, 'SQL is a standard query language used for maintaining the nonrelational database', 'false', 24),
       (95, 'SQL is a javascript language used for maintaining the nonrelational database', 'false', 24),
       (96, 'SQL is a javascript language used for maintaining the relational database', 'false', 24);
